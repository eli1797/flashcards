name: Go

on: push

env:
  ENVIRONMENT: "tst"

jobs:

  # unit-test:
  #   runs-on: macos-latest
  #   steps:
  #   - uses: actions/checkout@v2

  #   - name: Set up Go
  #     uses: actions/setup-go@v2
  #     with:
  #       go-version: 1.16

  #   - name: Test
  #     run: make test

  # aws-upload:
  #   runs-on: macos-latest
  #   needs: unit-test

  #   steps:
  #   - name: Configure AWS Credentials
  #     id: aws-configure
  #     uses: aws-actions/configure-aws-credentials@v1
  #     with:
  #       aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
  #       aws-secret-access-key: ${{ secrets.AWS_SECRET }}
  #       aws-region: us-east-2

  #   - uses: actions/checkout@v2

  #   - name: Build, Zip, Put in S3
  #     run: |
  #       make build-linux
  #       zip ${{ env.ENVIRONMENT }}-code bin/main 
  #       aws s3 cp ${{ env.ENVIRONMENT }}-code.zip s3://go-code-bucket/${{ env.ENVIRONMENT }}-code

  terraform-plan:
    runs-on: macos-latest
    # needs: [aws-upload, unit-test]

    defaults:
      run:
        working-directory: ./terraform

    steps:
    - name: Configure AWS Credentials
      id: aws-configure
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET }}
        aws-region: us-east-2

    - uses: actions/checkout@v2
    
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: 1.0.2

    - name: Terraform Fmt
      id: fmt
      run: terraform fmt -check -diff
      continue-on-error: false

    - name: Terraform Init
      id: init
      run: terraform init
      continue-on-error: false
    
    - name: Terraform Validate
      id: validate
      run: terraform validate -no-color
      continue-on-error: true

    - name: Terraform Plan
      id: plan
      run: terraform plan -var 'env=${{ env.ENVIRONMENT }}'
      continue-on-error: true


    