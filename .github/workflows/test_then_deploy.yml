name: Test and Deploy Lambda

on: push

env:
  ENVIRONMENT: "tst"

jobs:

  unit-test:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v2

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.16

    - name: Test
      run: make test

  aws-upload:
    runs-on: macos-latest
    needs: unit-test

    steps:
    - name: Configure AWS Credentials
      id: aws-configure
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET }}
        aws-region: us-east-2

    - uses: actions/checkout@v2

    - name: Build, Zip, Copy to S3
      run: |
        make build-linux
        # Zip and upload source code
        zip ${{ env.ENVIRONMENT }}-code bin/main 
        aws s3 cp ${{ env.ENVIRONMENT }}-code.zip s3://go-code-bucket/${{ env.ENVIRONMENT }}-code
        # Calculate and upload a source_code_hash for the zip
        openssl dgst -sha256 -binary ${{ env.ENVIRONMENT }}-code.zip | openssl enc -base64 | tr -d "\n" > ${{ env.ENVIRONMENT }}-code-sha256.zip.base64sha256
        aws s3 cp --content-type text/plain ${{ env.ENVIRONMENT }}-code-sha256.zip.base64sha256 s3://go-code-bucket/${{ env.ENVIRONMENT }}-code-sha256

  terraform-init-plan-apply:
    runs-on: macos-latest
    needs: [aws-upload, unit-test]

    defaults:
      run:
        working-directory: ./terraform

    steps:
    - name: Configure AWS Credentials
      id: aws-configure
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET }}
        aws-region: us-east-2

    - uses: actions/checkout@v2
    
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: 1.0.4

    - name: Terraform Fmt
      id: fmt
      run: terraform fmt -check -diff
      continue-on-error: false

    - name: Terraform Init
      id: init
      run: terraform init
      continue-on-error: false
    
    - name: Terraform Validate
      id: validate
      run: terraform validate -no-color
      continue-on-error: false

    - name: Terraform Plan
      id: plan
      run: terraform plan -var 'env=${{ env.ENVIRONMENT }}' -out=${{ env.ENVIRONMENT }}-tfplan
      continue-on-error: false

    - name: Terraform Apply
      id: apply
      run: terraform apply -auto-approve -var 'env=${{ env.ENVIRONMENT }}'
      continue-on-error: false



    