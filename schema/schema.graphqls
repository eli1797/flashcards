type User {
  id: ID!
}

type Deck {
  id: ID!
  title: String
  dueCards: [Card]
  allCards: [Card]
}

type Card {
  id: ID!
  deckId: ID!
  front: String
  back: String
  nextDue: String
}

type Query {
  user: User!
  deck(deckId: ID!): Deck
  card(deckId: ID!, id: ID!): Card
}

type Mutation {
  putCardInDeck(deckId: ID!, card: CardInput): Card
}

input CardInput {
  id: ID
  front: String
  back: String
  nextDue: String
}

# directive @goField(
#   forceResolver: Boolean
# ) on INPUT_FIELD_DEFINITION | FIELD_DEFINITION

# directive @deprecated(
#   reason: String = "No longer supported"
# ) on FIELD_DEFINITION